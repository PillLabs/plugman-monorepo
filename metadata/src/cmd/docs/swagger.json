{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "plugman backend service",
        "title": "Plugman service",
        "contact": {
            "name": "Maoma"
        },
        "version": "0.1.0"
    },
    "host": "plugman-dev.demonitors.xyz",
    "basePath": "/api/v1",
    "paths": {
        "/mint/{address}/{mint_type}/{count}/getSignature": {
            "get": {
                "description": "get signature",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mint"
                ],
                "summary": "get signature",
                "parameters": [
                    {
                        "type": "string",
                        "description": "minter address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "mint type can be 2(WL sale) 3(Public sale)",
                        "name": "mint_type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "purchase quantity for this minting",
                        "name": "count",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "20000": {
                        "description": "A successful response with ReturnCode' = 20000",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.GetSignatureResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "20001": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "20015": {
                        "description": "Server internal errors, just blame backend engineer",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "20021": {
                        "description": "insufficient quota for WL sale",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "20022": {
                        "description": "invalid mint type, this param can be 2 or 3 only",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "20023": {
                        "description": "all metadata has been used",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/order/{address}": {
            "get": {
                "description": "get orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "get orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "minter address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "20000": {
                        "description": "A successful response with ReturnCode' = 20000",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.GetOrderResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "20001": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "20015": {
                        "description": "Server internal errors, just blame backend engineer",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "20026": {
                        "description": "order not found",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "post order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "post order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "minter address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "post the transfer* tx hash back to server, let server tracking orders",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "20000": {
                        "description": "A successful response with ReturnCode' = 20000",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "20001": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "20015": {
                        "description": "Server internal errors, just blame backend engineer",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "20024": {
                        "description": "transaction not found",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "20027": {
                        "description": "this chain id is not supported",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/whitelist/{address}": {
            "get": {
                "description": "get whitelist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "whitelist"
                ],
                "summary": "get whitelist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "minter address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "20000": {
                        "description": "A successful response with ReturnCode' = 20000",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.GetWhitelistResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "20001": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "20015": {
                        "description": "Server internal errors, just blame backend engineer",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "20024": {
                        "description": "not have whitelist yet",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.GetSignatureResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "string"
                },
                "mintType": {
                    "type": "integer"
                },
                "nonce": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "traitValue": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.GetWhitelistResponse": {
            "type": "object",
            "properties": {
                "og_count": {
                    "type": "integer"
                },
                "og_minted": {
                    "type": "integer"
                },
                "wl_count": {
                    "type": "integer"
                },
                "wl_minted": {
                    "type": "integer"
                }
            }
        },
        "common.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "returnCode": {
                    "type": "integer"
                }
            }
        },
        "model.GetOrderResponse": {
            "type": "object",
            "properties": {
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Order"
                    }
                }
            }
        },
        "model.Order": {
            "type": "object",
            "properties": {
                "token_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tss_transfer": {
                    "$ref": "#/definitions/model.TssTransfer"
                }
            }
        },
        "model.PostOrderRequest": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "string"
                },
                "from_address": {
                    "type": "string"
                },
                "mint_type": {
                    "type": "integer"
                },
                "nonce": {
                    "type": "integer"
                },
                "tx_hash": {
                    "type": "string"
                }
            }
        },
        "model.TssTransfer": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "string"
                },
                "from_address": {
                    "type": "string"
                },
                "mint_type": {
                    "type": "integer"
                },
                "nonce": {
                    "type": "integer"
                },
                "order_status": {
                    "type": "integer"
                },
                "tx_hash": {
                    "type": "string"
                }
            }
        }
    }
}